/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-04-30 at 04:15:50 UTC 
 * Modify at your own risk.
 */

package com.asaan.server.com.asaan.server.endpoint.storeendpoint.model;

/**
 * Model definition for SplitOrderArguments.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the storeendpoint. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SplitOrderArguments extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cardid;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String customerId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long gratuityPercent;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StoreTableGroupMember memberMe;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StoreOrder order;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<StoreTableGroupMember> paidMembers;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer paymentType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private StoreTableGroup storeTableGroup;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long taxPercent;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String token;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCardid() {
    return cardid;
  }

  /**
   * @param cardid cardid or {@code null} for none
   */
  public SplitOrderArguments setCardid(java.lang.String cardid) {
    this.cardid = cardid;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }

  /**
   * @param customerId customerId or {@code null} for none
   */
  public SplitOrderArguments setCustomerId(java.lang.String customerId) {
    this.customerId = customerId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getGratuityPercent() {
    return gratuityPercent;
  }

  /**
   * @param gratuityPercent gratuityPercent or {@code null} for none
   */
  public SplitOrderArguments setGratuityPercent(java.lang.Long gratuityPercent) {
    this.gratuityPercent = gratuityPercent;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public StoreTableGroupMember getMemberMe() {
    return memberMe;
  }

  /**
   * @param memberMe memberMe or {@code null} for none
   */
  public SplitOrderArguments setMemberMe(StoreTableGroupMember memberMe) {
    this.memberMe = memberMe;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public StoreOrder getOrder() {
    return order;
  }

  /**
   * @param order order or {@code null} for none
   */
  public SplitOrderArguments setOrder(StoreOrder order) {
    this.order = order;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<StoreTableGroupMember> getPaidMembers() {
    return paidMembers;
  }

  /**
   * @param paidMembers paidMembers or {@code null} for none
   */
  public SplitOrderArguments setPaidMembers(java.util.List<StoreTableGroupMember> paidMembers) {
    this.paidMembers = paidMembers;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPaymentType() {
    return paymentType;
  }

  /**
   * @param paymentType paymentType or {@code null} for none
   */
  public SplitOrderArguments setPaymentType(java.lang.Integer paymentType) {
    this.paymentType = paymentType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public StoreTableGroup getStoreTableGroup() {
    return storeTableGroup;
  }

  /**
   * @param storeTableGroup storeTableGroup or {@code null} for none
   */
  public SplitOrderArguments setStoreTableGroup(StoreTableGroup storeTableGroup) {
    this.storeTableGroup = storeTableGroup;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getTaxPercent() {
    return taxPercent;
  }

  /**
   * @param taxPercent taxPercent or {@code null} for none
   */
  public SplitOrderArguments setTaxPercent(java.lang.Long taxPercent) {
    this.taxPercent = taxPercent;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getToken() {
    return token;
  }

  /**
   * @param token token or {@code null} for none
   */
  public SplitOrderArguments setToken(java.lang.String token) {
    this.token = token;
    return this;
  }

  @Override
  public SplitOrderArguments set(String fieldName, Object value) {
    return (SplitOrderArguments) super.set(fieldName, value);
  }

  @Override
  public SplitOrderArguments clone() {
    return (SplitOrderArguments) super.clone();
  }

}
